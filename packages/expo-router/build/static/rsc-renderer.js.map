{"version":3,"file":"rsc-renderer.js","sourceRoot":"","sources":["../../src/static/rsc-renderer.ts"],"names":[],"mappings":";AAAA;;;;;GAKG;;;;;;AAEH,wDAAqE;AACrE,kDAA0B;AAE1B,sEAA2F;AAE3F,qCAAiC;AACjC,kDAA0B;AAC1B,4CAAyC;AACzC,4DAAyD;AAIzD,0HAA0H;AAE1H,MAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,CAAC;AAOpC,MAAM,iBAAiB,GAAG,CAAC,OAAe,EAAE,EAAE;IACnD,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;QAClC,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;KACnC;IACD,OAAO,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC;AALW,QAAA,iBAAiB,qBAK5B;AAEK,KAAK,UAAU,uBAAuB,CAAC,QAAgB;IAC5D,gDAAgD;IAEhD,MAAM,MAAM,GAAG,IAAA,qBAAS,EAAC,UAAG,EAAE;QAC5B,UAAU,EAAE,MAAM;KACnB,CAAC,CAAC;IACH,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,MAAM,CAAC,CAAC;IACjD,MAAM,cAAc,GAAG,MAAM,IAAA,qCAAiB,EAAC,MAAM,CAAC,CAAC;IAEvD,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,cAAc,CAAC,UAAU,CAAC,CAAC;IACpE,MAAM,WAAW,GAAG,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAC1D,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAC3C,CAAC;IACF,IAAI,CAAC,WAAW,EAAE;QAChB,MAAM,IAAI,KAAK,CACb,+BAA+B,GAAG,QAAQ,GAAG,cAAc,GAAG,UAAG,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CACpF,CAAC;KACH;IAED,MAAM,UAAU,GAAG,WAAW,CAAC,IAAI,CAAC;IAEpC,IAAI,CAAC,UAAG,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;QACpC,MAAM,IAAI,KAAK,CACb,wBAAwB,GAAG,UAAU,GAAG,qBAAqB,GAAG,UAAG,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CACtF,CAAC;KACH;IAED,OAAO,WAAW,CAAC;AACrB,CAAC;AA5BD,0DA4BC;AAIM,KAAK,UAAU,SAAS,CAC7B,IA8BC;AAED,6BAA6B;;IAE7B,MAAM,EACJ,OAAO;IACP,YAAY;IACZ,YAAY;IACZ,eAAe;IACf,OAAO;IACP,cAAc;IACd,MAAM,EACN,KAAK,EACL,IAAI,EACJ,WAAW;IAEX,aAAa;IACb,YAAY;IACZ,gBAAgB,EAChB,OAAO,GACR,GAAG,IAAI,CAAC;IAET,MAAM,EACJ,OAAO,EAAE,EAAE,aAAa,EAAE,EAC1B,UAAU,GACX,GAAG,OAAgE,CAAC;IAErE,MAAM,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;IAEnD,MAAM,MAAM,GAAG,KAAK,EAClB,aAA4B,EAC5B,KAAa,EACb,YAA6B,EAC7B,EAAE;QACF,MAAM,QAAQ,GAAG,MAAM,aAAa,CAAC,IAAI,CAAC,aAAa,EAAE,KAAK,EAAE,YAAY,CAAC,CAAC;QAC9E,IAAI,QAAQ,KAAK,IAAI,EAAE;YACrB,MAAM,GAAG,GAAG,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;YACpD,GAAW,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC,mCAAmC;YAClE,MAAM,GAAG,CAAC;SACX;QACD,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE;YAC5D,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;SAC3C;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC,CAAC;IAEF,MAAM,aAAa,GAAG,IAAI,KAAK,CAC7B,EAAE,EACF;QACE,GAAG,CAAC,OAAO,EAAE,SAAiB;YAC5B,iDAAiD;YACjD,MAAM;YACJ,+GAA+G;YAC/G,IAAI;YACJ,gDAAgD;YAChD,IAAI,EACL,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAqB,CAAC;YAE7C,mJAAmJ;YACnJ,kDAAkD;YAClD,MAAM,EAAE,GAAG,kBAAkB,CAAC,IAAI,CAAC,CAAC;YACpC,iEAAiE;YACjE,gBAAgB,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;YACxE,OAAO,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC3D,CAAC;KACF,CACF,CAAC;IAEF,IAAI,MAAM,KAAK,MAAM,EAAE;QACrB,+CAA+C;QAC/C,MAAM,KAAK,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC;QACxC,wDAAwD;QACxD,IAAI,IAAI,GAAc,EAAE,CAAC;QACzB,IAAI,OAAO,GAAG,EAAE,CAAC;QACjB,IAAI,IAAI,EAAE;YACR,IAAI,IAAI,YAAY,cAAc,EAAE;gBAClC,OAAO,GAAG,MAAM,IAAA,+BAAsB,EAAC,IAAI,CAAC,CAAC;aAC9C;iBAAM,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;gBACnC,OAAO,GAAG,IAAI,CAAC;aAChB;iBAAM;gBACL,MAAM,IAAI,KAAK,CAAC,wBAAwB,GAAG,IAAI,CAAC,CAAC;aAClD;SACF;QACD,IAAI,OAAO,WAAW,KAAK,QAAQ,IAAI,WAAW,CAAC,UAAU,CAAC,qBAAqB,CAAC,EAAE;YACpF,mDAAmD;YACnD,MAAM,QAAQ,GAAG,aAAa,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;YACrD,IAAI,GAAG,MAAM,IAAA,yBAAW,EAAC,QAAQ,CAAC,CAAC;SACpC;aAAM,IAAI,OAAO,EAAE;YAClB,IAAI,GAAG,MAAM,IAAA,yBAAW,EAAC,OAAO,CAAC,CAAC;SACnC;QACD,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAqB,CAAC;QAC5D,IAAI,GAAQ,CAAC;QACb,IAAI,IAAI,CAAC,WAAW,KAAK,KAAK,EAAE;YAC9B,gDAAgD;YAChD,GAAG,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;YAC9D,sCAAsC;SACvC;aAAM;YACL,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;YACnD,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBAC9B,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;aACnD;YACD,GAAG,GAAG,MAAM,UAAW,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;SACtD;QACD,MAAM,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC;QAC5B,uCAAuC;QAEvC,IAAI,QAAQ,GAAuC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACvE,IAAI,QAAQ,GAAG,KAAK,CAAC;QAErB,uBAAuB;QACvB,sBAAsB;QACtB,MAAM,QAAQ,GAAG,CAAC,KAAa,EAAE,YAAY,GAAG,IAAI,eAAe,EAAE,EAAE,EAAE;YACvE,IAAI,QAAQ,EAAE;gBACZ,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;aACrC;YACD,MAAM,aAAa,GAAkB,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC;YAC3D,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,MAAM,CAAC,aAAa,EAAE,KAAK,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CACjF,CAAC,CAAC,WAAW,EAAE,WAAW,CAAC,EAAE,EAAE,CAAC,CAAC;gBAC/B,GAAG,WAAW;gBACd,GAAG,WAAW;aACf,CAAC,CACH,CAAC;QACJ,CAAC,CAAC;QACF,MAAM,aAAa,GAAkB,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC;QAC3D,MAAM,IAAI,GAAG,MAAM,EAAE,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;QACjD,MAAM,gBAAgB,GAAG,MAAM,QAAQ,CAAC;QACxC,QAAQ,GAAG,IAAI,CAAC;QAChB,OAAO,IAAA,oCAAsB,EAAC,EAAE,GAAG,gBAAgB,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,aAAa,CAAC,CAAC;KACrF;IAED,mBAAmB;IACnB,MAAM,aAAa,GAAkB;QACnC,QAAQ,EAAE,GAAG,EAAE;YACb,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;QACrC,CAAC;QACD,OAAO;KACR,CAAC;IACF,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,aAAa,EAAE,KAAK,EAAE,YAAY,CAAC,CAAC;IAElE,MAAM,MAAM,GAAG,IAAA,oCAAsB,EAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;IAE/D,4FAA4F;IAC5F,IAAI,KAAK,CAAC,OAAO,EAAE;QACjB,OAAO,gBAAgB,CAAC,MAAM,CAAC,CAAC;KACjC;IAED,OAAO,MAAM,CAAC;AAChB,CAAC;AAlLD,8BAkLC;AAED,SAAS,gBAAgB,CAAC,MAAsB;IAC9C,MAAM,WAAW,GAAG,IAAI,WAAW,EAAE,CAAC;IAEtC,kDAAkD;IAClD,OAAO,IAAI,cAAc,CAAC;QACxB,KAAK,CAAC,UAAU;YACd,MAAM,CAAC,MAAM,CACX,IAAI,cAAc,CAAC;gBACjB,KAAK,CAAC,KAAK;oBACT,OAAO,CAAC,GAAG,CAAC,IAAA,eAAK,EAAA,QAAQ,YAAE,SAAS,EAAE,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;oBACjE,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBAC5B,CAAC;gBACD,KAAK;oBACH,UAAU,CAAC,KAAK,EAAE,CAAC;gBACrB,CAAC;gBACD,KAAK,CAAC,MAAM;oBACV,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBAC3B,CAAC;aACF,CAAC,CACH,CAAC;QACJ,CAAC;KACF,CAAC,CAAC;AACL,CAAC;AAED,iDAAiD;AACjD,MAAM,aAAa,GAAG,CAAC,IAAY,EAAE,WAAmB,EAAE,EAAE;IAC1D,MAAM,QAAQ,GAAG,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;IACnD,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,QAAQ,EAAE,CAAC,CAAC;IAC1C,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;IAChC,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;QACxB,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,IAAI,KAAK,IAAI;YAAE,SAAS;QAClD,MAAM,CAAC,UAAU,EAAE,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;QACxD,MAAM,OAAO,GAAG,UAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,MAAM,CAC9C,CAAC,GAAG,EAAE,aAAa,EAAE,EAAE;YACrB,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC/C,GAAG,CAAC,GAAI,CAAC,WAAW,EAAE,CAAC,GAAG,KAAM,CAAC;YACjC,OAAO,GAAG,CAAC;QACb,CAAC,EACD,EAA4B,CAC7B,CAAC;QACF,MAAM,kBAAkB,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;QAC1D,MAAM,SAAS,GAAG,gBAAgB,CAAC,IAAI,CAAC,kBAAmB,CAAC,CAAC;QAC7D,MAAM,aAAa,GAAG,oBAAoB,CAAC,IAAI,CAAC,kBAAmB,CAAC,CAAC;QACrE,IAAI,SAAS,EAAE;YACb,MAAM,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAC1B,IAAI,aAAa,EAAE;gBACjB,MAAM,QAAQ,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;gBAClC,MAAM,IAAI,GAAG,OAAO,CAAC,cAAc,CAAC,IAAI,0BAA0B,CAAC;gBACnE,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,OAAQ,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;gBAC5C,QAAQ,CAAC,MAAM,CAAC,IAAK,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;aACxC;iBAAM;gBACL,QAAQ,CAAC,MAAM,CAAC,IAAK,EAAE,OAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;aACzC;SACF;KACF;IACD,OAAO,QAAQ,CAAC;AAClB,CAAC,CAAC;AAEF,MAAM,WAAW,GAAG,CAAC,YAAoB,EAAE,EAAE;IAC3C,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,YAAY,CAAC,CAAC;IAC5C,IAAI,YAAY,KAAK,WAAW,EAAE;QAChC,OAAO,EAAE,CAAC;KACX;IACD,IAAI,YAAY,EAAE,QAAQ,CAAC,MAAM,CAAC,EAAE;QAClC,OAAO,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;KAC9C;IACD,MAAM,GAAG,GAAG,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;IAC9C,GAAW,CAAC,UAAU,GAAG,GAAG,CAAC;IAC9B,MAAM,GAAG,CAAC;AACZ,CAAC,CAAC;AAEF,8CAA8C;AACvC,KAAK,UAAU,cAAc,CAAC,IAAqD;IACxF,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC;IAEjC,MAAM,EACJ,OAAO,EAAE,EAAE,cAAc,EAAE,GAC5B,GAAG,OAAO,CAAC;IACZ,IAAI,CAAC,cAAc,EAAE;QACnB,OAAO,CAAC,IAAI,CACV,wFAAwF,CACzF,CAAC;QACF,OAAO,EAAE,CAAC;KACX;IAED,MAAM,6BAA6B,GAAG,KAAK,EAAE,KAAa,EAAqB,EAAE;QAC/E,MAAM,KAAK,GAAG,IAAI,GAAG,EAAU,CAAC;QAChC,MAAM,QAAQ,GAAG,MAAM,SAAS,CAAC;YAC/B,MAAM;YACN,KAAK;YACL,YAAY,EAAE,IAAI,eAAe,EAAE;YACnC,MAAM,EAAE,KAAK;YACb,OAAO,EAAE,IAAI;YACb,gBAAgB,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC;YAC3C,WAAW,EAAE,IAAI;YACjB,kBAAkB,EAAE,CAAC,EAAE,EAAE,EAAE;gBACzB,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;YACxD,CAAC;YACD,OAAO;SACR,CAAC,CAAC;QACH,MAAM,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAC1C,MAAM,QAAQ,GAAG,IAAI,cAAc,CAAC;gBAClC,KAAK;oBACH,OAAO,EAAE,CAAC;gBACZ,CAAC;gBACD,KAAK,CAAC,MAAM;oBACV,MAAM,CAAC,MAAM,CAAC,CAAC;gBACjB,CAAC;aACF,CAAC,CAAC;YACH,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;QACH,OAAO,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC,CAAC;IAEF,MAAM,MAAM,GAAG,MAAM,cAAc,CAAC,6BAA6B,CAAC,CAAC;IACnE,OAAO,MAAM,CAAC;AAChB,CAAC;AA5CD,wCA4CC","sourcesContent":["/**\n * Copyright Â© 2023 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { readableStreamToString } from '@remix-run/node/dist/stream';\nimport chalk from 'chalk';\nimport type { ReactNode } from 'react';\nimport { renderToReadableStream, decodeReply } from 'react-server-dom-webpack/server.edge';\n\nimport { ctx } from '../../_ctx';\nimport OS from '../../os';\nimport { getRoutes } from '../getRoutes';\nimport { getServerManifest } from '../getServerManifest';\n// import { SHOULD_SKIP_ID, ShouldSkip } from '../rsc/router/common';\nimport { EntriesDev, EntriesPrd } from '../rsc/server';\n\n// Importing this from the root will cause a second copy of source-map-support to be loaded which will break stack traces.\n\nconst debug = require('debug')('expo:rsc');\n\nexport interface RenderContext<T = unknown> {\n  rerender: (input: string, searchParams?: URLSearchParams) => void;\n  context: T;\n}\n\nexport const fileURLToFilePath = (fileURL: string) => {\n  if (!fileURL.startsWith('file://')) {\n    throw new Error('Not a file URL');\n  }\n  return decodeURI(fileURL.slice('file://'.length));\n};\n\nexport async function getRouteNodeForPathname(pathname: string) {\n  // TODO: Populate this with Expo Router results.\n\n  const routes = getRoutes(ctx, {\n    importMode: 'lazy',\n  });\n  console.log('serverManifest.htmlRoutes', routes);\n  const serverManifest = await getServerManifest(routes);\n\n  console.log('serverManifest.htmlRoutes', serverManifest.htmlRoutes);\n  const matchedNode = serverManifest.htmlRoutes.find((file) =>\n    new RegExp(file.namedRegex).test(pathname)\n  );\n  if (!matchedNode) {\n    throw new Error(\n      'No matching route found for: ' + pathname + '. Expected: ' + ctx.keys().join(', ')\n    );\n  }\n\n  const contextKey = matchedNode.file;\n\n  if (!ctx.keys().includes(contextKey)) {\n    throw new Error(\n      'Failed to find route: ' + contextKey + '. Expected one of: ' + ctx.keys().join(', ')\n    );\n  }\n\n  return matchedNode;\n}\n\ntype ResolvedConfig = any;\n\nexport async function renderRsc(\n  opts: {\n    // TODO:\n    config: ResolvedConfig;\n\n    // Done\n    input: string;\n    searchParams: URLSearchParams;\n    method: 'GET' | 'POST';\n    context: unknown;\n    body?: ReadableStream | undefined;\n    contentType?: string | undefined;\n    moduleIdCallback?: (module: {\n      id: string;\n      chunks: string[];\n      name: string;\n      async: boolean;\n    }) => void;\n\n    // Others\n    // serverRoot: string;\n    // serverUrl: URL;\n    // onReload: () => void;\n    resolveClientEntry: (id: string) => { id: string; url: string };\n  } & (\n    | { isExporting: true; entries: EntriesPrd }\n    | {\n        isExporting: false;\n        entries: EntriesDev;\n        customImport: (fileURL: string) => Promise<unknown>;\n      }\n  )\n\n  // moduleMap: WebpackManifest\n): Promise<ReadableStream> {\n  const {\n    entries,\n    // elements,\n    searchParams,\n    // isExporting,\n    // url,\n    // serverRoot,\n    method,\n    input,\n    body,\n    contentType,\n\n    // serverUrl,\n    // onReload,\n    moduleIdCallback,\n    context,\n  } = opts;\n\n  const {\n    default: { renderEntries },\n    loadModule,\n  } = entries as (EntriesDev & { loadModule: undefined }) | EntriesPrd;\n\n  const resolveClientEntry = opts.resolveClientEntry;\n\n  const render = async (\n    renderContext: RenderContext,\n    input: string,\n    searchParams: URLSearchParams\n  ) => {\n    const elements = await renderEntries.call(renderContext, input, searchParams);\n    if (elements === null) {\n      const err = new Error('No function component found');\n      (err as any).statusCode = 404; // HACK our convention for NotFound\n      throw err;\n    }\n    if (Object.keys(elements).some((key) => key.startsWith('_'))) {\n      throw new Error('\"_\" prefix is reserved');\n    }\n    return elements;\n  };\n\n  const bundlerConfig = new Proxy(\n    {},\n    {\n      get(_target, encodedId: string) {\n        // console.log('Get manifest entry:', encodedId);\n        const [\n          // File is the on-disk location of the module, this is injected during the \"use client\" transformation (babel).\n          file,\n          // The name of the import (e.g. \"default\" or \"\")\n          name,\n        ] = encodedId.split('#') as [string, string];\n\n        // We'll augment the file path with the incoming RSC request which will forward the metro props required to make a cache hit, e.g. platform=web&...\n        // This is similar to how we handle lazy bundling.\n        const id = resolveClientEntry(file);\n        // console.log('Returning server module:', id, 'for', encodedId);\n        moduleIdCallback?.({ id: id.url, chunks: [id.url], name, async: true });\n        return { id: id.id, chunks: [id.id], name, async: true };\n      },\n    }\n  );\n\n  if (method === 'POST') {\n    // TODO(Bacon): Fix Server action ID generation\n    const rsfId = decodeURIComponent(input);\n    // const rsfId = decodeURIComponent(decodeInput(input));\n    let args: unknown[] = [];\n    let bodyStr = '';\n    if (body) {\n      if (body instanceof ReadableStream) {\n        bodyStr = await readableStreamToString(body);\n      } else if (typeof body === 'string') {\n        bodyStr = body;\n      } else {\n        throw new Error('Unexpected body type: ' + body);\n      }\n    }\n    if (typeof contentType === 'string' && contentType.startsWith('multipart/form-data')) {\n      // XXX This doesn't support streaming unlike busboy\n      const formData = parseFormData(bodyStr, contentType);\n      args = await decodeReply(formData);\n    } else if (bodyStr) {\n      args = await decodeReply(bodyStr);\n    }\n    const [fileId, name] = rsfId.split('#') as [string, string];\n    let mod: any;\n    if (opts.isExporting === false) {\n      // console.log('Loading module:', fileId, name);\n      mod = await opts.customImport(resolveClientEntry(fileId).url);\n      // console.log('Loaded module:', mod);\n    } else {\n      throw new Error('TODO: Make this work with Metro');\n      if (!fileId.startsWith('@id/')) {\n        throw new Error('Unexpected server entry in PRD');\n      }\n      mod = await loadModule!(fileId.slice('@id/'.length));\n    }\n    const fn = mod[name] || mod;\n    // console.log('Target function:', fn);\n\n    let elements: Promise<Record<string, ReactNode>> = Promise.resolve({});\n    let rendered = false;\n\n    // TODO: Define context\n    // const context = {};\n    const rerender = (input: string, searchParams = new URLSearchParams()) => {\n      if (rendered) {\n        throw new Error('already rendered');\n      }\n      const renderContext: RenderContext = { rerender, context };\n      elements = Promise.all([elements, render(renderContext, input, searchParams)]).then(\n        ([oldElements, newElements]) => ({\n          ...oldElements,\n          ...newElements,\n        })\n      );\n    };\n    const renderContext: RenderContext = { rerender, context };\n    const data = await fn.apply(renderContext, args);\n    const resolvedElements = await elements;\n    rendered = true;\n    return renderToReadableStream({ ...resolvedElements, _value: data }, bundlerConfig);\n  }\n\n  // method === 'GET'\n  const renderContext: RenderContext = {\n    rerender: () => {\n      throw new Error('Cannot rerender');\n    },\n    context,\n  };\n  const elements = await render(renderContext, input, searchParams);\n\n  const stream = renderToReadableStream(elements, bundlerConfig);\n\n  // Logging is very useful for native platforms where the network tab isn't always available.\n  if (debug.enabled) {\n    return withDebugLogging(stream);\n  }\n\n  return stream;\n}\n\nfunction withDebugLogging(stream: ReadableStream) {\n  const textDecoder = new TextDecoder();\n\n  // Wrap the stream and log chunks to the terminal.\n  return new ReadableStream({\n    start(controller) {\n      stream.pipeTo(\n        new WritableStream({\n          write(chunk) {\n            console.log(chalk`{dim ${OS} [rsc]}`, textDecoder.decode(chunk));\n            controller.enqueue(chunk);\n          },\n          close() {\n            controller.close();\n          },\n          abort(reason) {\n            controller.error(reason);\n          },\n        })\n      );\n    },\n  });\n}\n\n// TODO is this correct? better to use a library?\nconst parseFormData = (body: string, contentType: string) => {\n  const boundary = contentType.split('boundary=')[1];\n  const parts = body.split(`--${boundary}`);\n  const formData = new FormData();\n  for (const part of parts) {\n    if (part.trim() === '' || part === '--') continue;\n    const [rawHeaders, content] = part.split('\\r\\n\\r\\n', 2);\n    const headers = rawHeaders!.split('\\r\\n').reduce(\n      (acc, currentHeader) => {\n        const [key, value] = currentHeader.split(': ');\n        acc[key!.toLowerCase()] = value!;\n        return acc;\n      },\n      {} as Record<string, string>\n    );\n    const contentDisposition = headers['content-disposition'];\n    const nameMatch = /name=\"([^\"]+)\"/.exec(contentDisposition!);\n    const filenameMatch = /filename=\"([^\"]+)\"/.exec(contentDisposition!);\n    if (nameMatch) {\n      const name = nameMatch[1];\n      if (filenameMatch) {\n        const filename = filenameMatch[1];\n        const type = headers['content-type'] || 'application/octet-stream';\n        const blob = new Blob([content!], { type });\n        formData.append(name!, blob, filename);\n      } else {\n        formData.append(name!, content!.trim());\n      }\n    }\n  }\n  return formData;\n};\n\nconst decodeInput = (encodedInput: string) => {\n  console.log('> decodeInput:', encodedInput);\n  if (encodedInput === 'index.txt') {\n    return '';\n  }\n  if (encodedInput?.endsWith('.txt')) {\n    return encodedInput.slice(0, -'.txt'.length);\n  }\n  const err = new Error('Invalid encoded input');\n  (err as any).statusCode = 400;\n  throw err;\n};\n\n// TODO: Implement this in production exports.\nexport async function getBuildConfig(opts: { config: ResolvedConfig; entries: EntriesPrd }) {\n  const { config, entries } = opts;\n\n  const {\n    default: { getBuildConfig },\n  } = entries;\n  if (!getBuildConfig) {\n    console.warn(\n      \"getBuildConfig is undefined. It's recommended for optimization and sometimes required.\"\n    );\n    return [];\n  }\n\n  const unstable_collectClientModules = async (input: string): Promise<string[]> => {\n    const idSet = new Set<string>();\n    const readable = await renderRsc({\n      config,\n      input,\n      searchParams: new URLSearchParams(),\n      method: 'GET',\n      context: null,\n      moduleIdCallback: ({ id }) => idSet.add(id),\n      isExporting: true,\n      resolveClientEntry: (id) => {\n        throw new Error('TODO: Implement resolveClientEntry');\n      },\n      entries,\n    });\n    await new Promise<void>((resolve, reject) => {\n      const writable = new WritableStream({\n        close() {\n          resolve();\n        },\n        abort(reason) {\n          reject(reason);\n        },\n      });\n      readable.pipeTo(writable);\n    });\n    return Array.from(idSet);\n  };\n\n  const output = await getBuildConfig(unstable_collectClientModules);\n  return output;\n}\n"]}