{"version":3,"file":"html-renderer.js","sourceRoot":"","sources":["../../src/static/html-renderer.ts"],"names":[],"mappings":"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","sourcesContent":["import type * as RDServerType from 'react-dom/server.edge';\nimport type { default as RSDWClientType } from 'react-server-dom-webpack/client.edge';\nimport { injectRSCPayload } from 'rsc-html-stream/server';\n\nimport type * as WakuClientType from '../rsc/client';\n// import type { ResolvedConfig } from '../config.js';\n// import type { CLIENT_MODULE_KEY } from '../handlers/handler-dev.js';\n\nimport type {\n  default as ReactType,\n  createElement as createElementType,\n  ReactNode,\n  FunctionComponent,\n  ComponentProps,\n} from 'react';\n\nimport { encodeInput, hasStatusCode } from './utils';\nimport { joinPath, filePathToFileURL, fileURLToFilePath } from '../rsc/path';\nimport { concatUint8Arrays } from '../rsc/stream';\n\nimport { createElement } from 'react';\nimport { renderToReadableStream } from 'react-dom/server.edge';\nimport { createFromReadableStream } from 'react-server-dom-webpack/client.edge';\nimport { ServerRoot } from '../rsc/client';\nimport { EntriesPrd } from '../rsc/server';\n\ntype ResolvedConfig = any;\n\n// const [\n//   {\n//     default: { createElement },\n//   },\n//   {\n//     default: { renderToReadableStream },\n//   },\n//   {\n//     default: { createFromReadableStream },\n//   },\n//   { ServerRoot },\n// ] = await Promise.all([\n//   loadClientModule('react') as Promise<{ default: typeof ReactType }>,\n//   loadClientModule('rd-server') as Promise<{ default: typeof RDServerType }>,\n//   loadClientModule('rsdw-client') as Promise<{\n//     default: typeof RSDWClientType;\n//   }>,\n//   loadClientModule('waku-client') as Promise<typeof WakuClientType>,\n// ]);\n\n// HACK for react-server-dom-webpack without webpack\n(globalThis as any).__webpack_module_loading__ ||= new Map();\n(globalThis as any).__webpack_module_cache__ ||= new Map();\n(globalThis as any).__webpack_chunk_load__ ||= async (id: string) =>\n  (globalThis as any).__webpack_module_loading__.get(id);\n(globalThis as any).__webpack_require__ ||= (id: string) =>\n  (globalThis as any).__webpack_module_cache__.get(id);\nconst moduleLoading = (globalThis as any).__webpack_module_loading__;\nconst moduleCache = (globalThis as any).__webpack_module_cache__;\n\nconst fakeFetchCode = `\nPromise.resolve(new Response(new ReadableStream({\n  start(c) {\n    const d = (self.__FLIGHT_DATA ||= []);\n    const t = new TextEncoder();\n    const f = (s) => c.enqueue(typeof s === 'string' ? t.encode(s) : s);\n    d.forEach(f);\n    d.push = f;\n    if (document.readyState === 'loading') {\n      document.addEventListener('DOMContentLoaded', () => c.close());\n    } else {\n      c.close();\n    }\n  }\n})))\n`\n  .split('\\n')\n  .map((line) => line.trim())\n  .join('');\n\nconst injectScript = (\n  urlForFakeFetch: string,\n  mainJsPath: string // for DEV only, pass `''` for PRD\n) => {\n  const modifyHead = (data: string) => {\n    const matchPrefetched = data.match(\n      // HACK This is very brittle\n      /(.*<script[^>]*>\\nglobalThis\\.__WAKU_PREFETCHED__ = {\\n)(.*?)(\\n};.*)/s\n    );\n    if (matchPrefetched) {\n      data = matchPrefetched[1] + `  '${urlForFakeFetch}': ${fakeFetchCode},` + matchPrefetched[3];\n    }\n    const closingHeadIndex = data.indexOf('</head>');\n    if (closingHeadIndex === -1) {\n      throw new Error('closing head not found');\n    }\n    let code = '';\n    if (!matchPrefetched) {\n      code += `\nglobalThis.__WAKU_PREFETCHED__ = {\n  '${urlForFakeFetch}': ${fakeFetchCode},\n};\n`;\n    }\n    if (code) {\n      data =\n        data.slice(0, closingHeadIndex) +\n        `<script type=\"module\" async>${code}</script>` +\n        data.slice(closingHeadIndex);\n    }\n    return data;\n  };\n  const encoder = new TextEncoder();\n  const decoder = new TextDecoder();\n  let headSent = false;\n  let data = '';\n  return new TransformStream({\n    transform(chunk, controller) {\n      if (!(chunk instanceof Uint8Array)) {\n        throw new Error('Unknown chunk type');\n      }\n      data += decoder.decode(chunk);\n      if (!headSent) {\n        if (!/<\\/head><body[^>]*>/.test(data)) {\n          return;\n        }\n        headSent = true;\n        data = modifyHead(data);\n        if (mainJsPath) {\n          data += `<script src=\"${mainJsPath}\" async type=\"module\"></script>`;\n        }\n      }\n      controller.enqueue(encoder.encode(data));\n      data = '';\n    },\n  });\n};\n\n// HACK for now, do we want to use HTML parser?\nconst rectifyHtml = () => {\n  const pending: Uint8Array[] = [];\n  const decoder = new TextDecoder();\n  let timer: ReturnType<typeof setTimeout> | undefined;\n  return new TransformStream({\n    transform(chunk, controller) {\n      if (!(chunk instanceof Uint8Array)) {\n        throw new Error('Unknown chunk type');\n      }\n      pending.push(chunk);\n      if (/<\\/\\w+>$/.test(decoder.decode(chunk))) {\n        clearTimeout(timer);\n        timer = setTimeout(() => {\n          controller.enqueue(concatUint8Arrays(pending.splice(0)));\n        });\n      }\n    },\n    flush(controller) {\n      clearTimeout(timer);\n      if (pending.length) {\n        controller.enqueue(concatUint8Arrays(pending.splice(0)));\n      }\n    },\n  });\n};\n\nconst buildHtml = (createElement: typeof createElementType, head: string, body: ReactNode) =>\n  createElement(\n    'html',\n    null,\n    createElement('head', { dangerouslySetInnerHTML: { __html: head } }),\n    createElement('body', { 'data-hydrate': true }, body)\n  );\n\nexport const renderHtml = async (\n  opts: {\n    config: ResolvedConfig;\n    pathname: string;\n    searchParams: URLSearchParams;\n    htmlHead: string;\n    renderRscForHtml: (input: string, searchParams: URLSearchParams) => Promise<ReadableStream>;\n    getSsrConfigForHtml: (\n      pathname: string,\n      searchParams: URLSearchParams\n    ) => Promise<{\n      input: string;\n      searchParams?: URLSearchParams;\n      body: ReadableStream;\n    } | null>;\n    loadClientModule: (key: string) => Promise<unknown>;\n  } & (\n    | { isDev: false; loadModule: EntriesPrd['loadModule'] }\n    | {\n        isDev: true;\n        rootDir: string;\n        loadServerFile: (fileURL: string) => Promise<unknown>;\n      }\n  )\n): Promise<ReadableStream | null> => {\n  const {\n    config,\n    pathname,\n    searchParams,\n    htmlHead,\n    renderRscForHtml,\n    getSsrConfigForHtml,\n    loadClientModule,\n    isDev,\n  } = opts;\n\n  const [\n    {\n      default: { createElement },\n    },\n    {\n      default: { renderToReadableStream },\n    },\n    {\n      default: { createFromReadableStream },\n    },\n    { ServerRoot },\n  ] = await Promise.all([\n    loadClientModule('react') as Promise<{ default: typeof ReactType }>,\n    loadClientModule('rd-server') as Promise<{ default: typeof RDServerType }>,\n    loadClientModule('rsdw-client') as Promise<{\n      default: typeof RSDWClientType;\n    }>,\n    loadClientModule('waku-client') as Promise<typeof WakuClientType>,\n  ]);\n  const ssrConfig = await getSsrConfigForHtml?.(pathname, searchParams);\n  if (!ssrConfig) {\n    return null;\n  }\n  let stream: ReadableStream;\n  try {\n    stream = await renderRscForHtml(ssrConfig.input, ssrConfig.searchParams || searchParams);\n  } catch (e) {\n    if (hasStatusCode(e) && e.statusCode === 404) {\n      return null;\n    }\n    throw e;\n  }\n  const moduleMap = new Proxy(\n    {} as Record<\n      string,\n      Record<\n        string,\n        {\n          id: string;\n          chunks: string[];\n          name: string;\n        }\n      >\n    >,\n    {\n      get(_target, filePath: string) {\n        return new Proxy(\n          {},\n          {\n            get(_target, name: string) {\n              const file = filePath.slice(config.basePath.length);\n              // TODO too long, we need to refactor this logic\n              if (isDev) {\n                const filePath = file.startsWith('@fs/')\n                  ? file.slice('@fs'.length)\n                  : joinPath(opts.rootDir, file);\n                const wakuDist = joinPath(fileURLToFilePath(import.meta.url), '../../..');\n                if (filePath.startsWith(wakuDist)) {\n                  const id = 'waku' + filePath.slice(wakuDist.length).replace(/\\.\\w+$/, '');\n                  if (!moduleLoading.has(id)) {\n                    moduleLoading.set(\n                      id,\n                      import(id).then((m) => {\n                        moduleCache.set(id, m);\n                      })\n                    );\n                  }\n                  return { id, chunks: [id], name };\n                }\n                const id = filePathToFileURL(filePath);\n                if (!moduleLoading.has(id)) {\n                  moduleLoading.set(\n                    id,\n                    opts.loadServerFile(id).then((m) => {\n                      moduleCache.set(id, m);\n                    })\n                  );\n                }\n                return { id, chunks: [id], name };\n              }\n              // !isDev\n              const id = file;\n              if (!moduleLoading.has(id)) {\n                moduleLoading.set(\n                  id,\n                  opts.loadModule(joinPath(config.ssrDir, id)).then((m: any) => {\n                    moduleCache.set(id, m);\n                  })\n                );\n              }\n              return { id, chunks: [id], name };\n            },\n          }\n        );\n      },\n    }\n  );\n  const [stream1, stream2] = stream.tee();\n  const elements: Promise<Record<string, ReactNode>> = createFromReadableStream(stream1, {\n    ssrManifest: { moduleMap, moduleLoading: null },\n  });\n  const body: Promise<ReactNode> = createFromReadableStream(ssrConfig.body, {\n    ssrManifest: { moduleMap, moduleLoading: null },\n  });\n  const readable = (\n    await renderToReadableStream(\n      buildHtml(\n        createElement,\n        htmlHead,\n        createElement(\n          ServerRoot as FunctionComponent<Omit<ComponentProps<typeof ServerRoot>, 'children'>>,\n          { elements },\n          body as any\n        )\n      ),\n      {\n        onError(err: unknown) {\n          console.error(err);\n        },\n      }\n    )\n  )\n    .pipeThrough(rectifyHtml())\n    .pipeThrough(\n      injectScript(\n        config.basePath + config.rscPath + '/' + encodeInput(ssrConfig.input),\n        isDev ? `${config.basePath}${config.srcDir}/${config.mainJs}` : ''\n      )\n    )\n    .pipeThrough(injectRSCPayload(stream2));\n  return readable;\n};\n"]}