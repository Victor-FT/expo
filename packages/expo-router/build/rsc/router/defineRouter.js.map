{"version":3,"file":"defineRouter.js","sourceRoot":"","sources":["../../../src/rsc/router/defineRouter.ts"],"names":[],"mappings":"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","sourcesContent":["import { createElement, Fragment } from 'react';\nimport type { FunctionComponent, ReactNode } from 'react';\n\nimport {\n  getComponentIds,\n  getInputString,\n  parseInputString,\n  PARAM_KEY_SKIP,\n  SHOULD_SKIP_ID,\n} from './common.js';\nimport type { RouteProps, ShouldSkip } from './common.js';\nimport { ShouldSkipComponent } from './should-skip';\nimport { Children, Slot } from '../client.js';\nimport { getPathMapping, PathSpec } from '../path.js';\nimport type { RenderEntries, GetBuildConfig, GetSsrConfig } from '../server.js';\nimport { defineEntries } from '../server.js';\n\nexport function defineRouter(\n  getPathConfig: () => Promise<Iterable<{ path: PathSpec; isStatic?: boolean }>>,\n  getComponent: (\n    componentId: string, // \"**/layout\" or \"**/page\"\n    unstable_setShouldSkip: (val?: ShouldSkip[string]) => void\n  ) => Promise<\n    | FunctionComponent<RouteProps>\n    | FunctionComponent<RouteProps & { children: ReactNode }>\n    | { default: FunctionComponent<RouteProps> }\n    | { default: FunctionComponent<RouteProps & { children: ReactNode }> }\n    | null\n  >\n): ReturnType<typeof defineEntries> {\n  const pathConfigPromise = getPathConfig().then((pathConfig) =>\n    Array.from(pathConfig).map((item) => {\n      const is404 =\n        item.path.length === 1 && item.path[0]!.type === 'literal' && item.path[0]!.name === '404';\n      return { ...item, is404 };\n    })\n  );\n  const has404Promise = pathConfigPromise.then((pathConfig) =>\n    pathConfig.some(({ is404 }) => is404)\n  );\n  const existsPath = async (pathname: string) => {\n    const pathConfig = await pathConfigPromise;\n    return pathConfig.some(({ path: pathSpec }) => getPathMapping(pathSpec, pathname));\n  };\n  const shouldSkip: ShouldSkip = {};\n\n  const renderEntries: RenderEntries = async (input, searchParams) => {\n    const pathname = parseInputString(input);\n    if (!existsPath(pathname)) {\n      return null;\n    }\n    const skip = searchParams.getAll(PARAM_KEY_SKIP) || [];\n    const componentIds = getComponentIds(pathname);\n    const props: RouteProps = { path: pathname, searchParams };\n    const entries = (\n      await Promise.all(\n        componentIds.map(async (id) => {\n          if (skip?.includes(id)) {\n            return [];\n          }\n          const mod = await getComponent(id, (val) => {\n            if (val) {\n              shouldSkip[id] = val;\n            } else {\n              delete shouldSkip[id];\n            }\n          });\n          const component = mod && 'default' in mod ? mod.default : mod;\n          if (!component) {\n            return [];\n          }\n          const element = createElement(\n            component as FunctionComponent<RouteProps>,\n            props,\n            createElement(Children)\n          );\n          return [[id, element]] as const;\n        })\n      )\n    ).flat();\n    entries.push([SHOULD_SKIP_ID, createElement(ShouldSkipComponent, { shouldSkip }) as any]);\n    return Object.fromEntries(entries);\n  };\n\n  const getBuildConfig: GetBuildConfig = async (unstable_collectClientModules) => {\n    const pathConfig = await pathConfigPromise;\n    const path2moduleIds: Record<string, string[]> = {};\n    for (const { path: pathSpec } of pathConfig) {\n      if (pathSpec.some(({ type }) => type !== 'literal')) {\n        continue;\n      }\n      const pathname = '/' + pathSpec.map(({ name }) => name).join('/');\n      const input = getInputString(pathname);\n      const moduleIds = await unstable_collectClientModules(input);\n      path2moduleIds[pathname] = moduleIds;\n    }\n    const customCode = `\nglobalThis.__WAKU_ROUTER_PREFETCH__ = (path) => {\n  const path2ids = ${JSON.stringify(path2moduleIds)};\n  for (const id of path2ids[path] || []) {\n    import(id);\n  }\n};`;\n    const buildConfig: {\n      pathname: PathSpec;\n      isStatic: boolean;\n      entries: { input: string; isStatic: boolean }[];\n      customCode: string;\n    }[] = [];\n    for (const { path: pathSpec, isStatic = false, is404 } of pathConfig) {\n      const entries: (typeof buildConfig)[number]['entries'] = [];\n      if (pathSpec.every(({ type }) => type === 'literal')) {\n        const pathname = '/' + pathSpec.map(({ name }) => name).join('/');\n        const input = getInputString(pathname);\n        entries.push({ input, isStatic });\n      }\n      buildConfig.push({\n        pathname: pathSpec,\n        isStatic,\n        entries,\n        customCode: customCode + (is404 ? 'globalThis.__WAKU_ROUTER_404__ = true;' : ''),\n      });\n    }\n    return buildConfig;\n  };\n\n  const getSsrConfig: GetSsrConfig = async (pathname) => {\n    if (!(await existsPath(pathname))) {\n      if (await has404Promise) {\n        pathname = '/404';\n      } else {\n        return null;\n      }\n    }\n    const componentIds = getComponentIds(pathname);\n    const input = getInputString(pathname);\n    const body = createElement(\n      Fragment,\n      null,\n      createElement(Slot, { id: SHOULD_SKIP_ID }),\n      componentIds.reduceRight(\n        (acc: ReactNode, id) => createElement(Slot, { id, fallback: acc }, acc),\n        null\n      )\n    );\n    return { input, body };\n  };\n\n  return { renderEntries, getBuildConfig, getSsrConfig };\n}\n"]}