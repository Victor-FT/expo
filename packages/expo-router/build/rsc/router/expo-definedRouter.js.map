{"version":3,"file":"expo-definedRouter.js","sourceRoot":"","sources":["../../../src/rsc/router/expo-definedRouter.tsx"],"names":[],"mappings":"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","sourcesContent":["// import { fileURLToPath } from 'node:url';\n// import path from 'node:path';\n// import { existsSync } from 'node:fs';\n// import fsPromises from 'node:fs/promises';\nimport { ctx } from 'expo-router/_ctx-async';\nimport React, { lazy, createElement } from 'react';\n\n// import { glob } from 'glob';\nimport { View } from 'react-native';\n\nimport { defineRouter } from './defineRouter';\nimport { Route, RouteNode } from '../../Route';\nimport { getRoutes } from '../../getRoutes';\nimport { getServerManifest } from '../../getServerManifest';\nimport {\n  matchDeepDynamicRouteName,\n  matchDynamicName,\n  matchGroupName,\n  removeSupportedExtensions,\n  stripInvisibleSegmentsFromPath,\n} from '../../matchers';\n\n// const routesDir = path.join(\n//   path.dirname(fileURLToPath(import.meta.url)),\n//   'routes',\n// );\n\nconst getMappingAndItems = async (id: string) => {\n  const mapping: Record<string, string> = {};\n  const items = id.split('/');\n  for (let i = 0; i < items.length - 1; ++i) {\n    // const dir = path.join(routesDir, ...items.slice(0, i));\n    // if (!existsSync(dir)) {\n    //   return null;\n    // }\n    // TODO: Check logic\n    const files = ctx.keys();\n    if (!files.includes(items[i]!)) {\n      const slug = files.find((file) => file.match(/^(\\[\\w+\\]|_\\w+_)$/));\n      if (slug) {\n        mapping[slug.slice(1, -1)] = items[i]!;\n        items[i] = slug;\n      }\n    }\n  }\n\n  return { mapping, items };\n};\n\nconst getPathConfig = async () => {\n  const files = ctx\n    .keys()\n    .map((file) => file.replace(/^\\.\\//, ''))\n    .map(removeSupportedExtensions)\n    .filter(\n      // Leaf nodes only\n      (file) => !file.endsWith('_layout') && !file.endsWith('+not-found') && !file.endsWith('+html')\n    );\n\n  return files.map((file) => {\n    const names = file.split('/').filter(Boolean); //.slice(0, -1);\n    const pathSpec = names\n      .map((name, index) => {\n        const isLast = index === names.length - 1;\n\n        if (isLast && name === 'index') {\n          return null;\n        }\n\n        if (matchGroupName(name)) {\n          throw new Error('TODO: group name syntax is not supported');\n        }\n\n        if (matchDeepDynamicRouteName(name)) {\n          throw new Error('TODO: deep dynamic route name syntax is not supported');\n        }\n\n        const match = matchDynamicName(name); // name.match(/^(\\[\\w+\\]|_\\w+_)$/);\n        if (match) {\n          return { type: 'group', name: match } as const;\n        }\n        return { type: 'literal', name } as const;\n      })\n      .filter((route) => route != null);\n    return {\n      path: pathSpec,\n      isStatic: pathSpec.every(({ type }) => type === 'literal'),\n    };\n  });\n};\n\nconst routes = getRoutes(ctx, {\n  importMode: 'lazy',\n});\n\nfunction wakuRouteIdToExpoRoute(route: RouteNode, routeId: string) {\n  // Route like `layout` or `page` to match `_layout` or `index`\n  // Route like `second/layout` or `second/page` to match `second/_layout` or `second`\n  const parts = routeId.split('/');\n\n  let currentRoute = route;\n  // console.log('0.', parts);\n  for (let i = 0; i < parts.length; i++) {\n    const part = parts[i];\n\n    // console.log('1.', part);\n    if (i === parts.length - 1) {\n      // console.log('Last =>', part, currentRoute);\n      if (part === 'layout' && currentRoute?.type === 'layout') {\n        return currentRoute;\n        // return route;\n      }\n\n      if (part === 'page') {\n        // console.log('2.', part);\n        if (currentRoute?.type === 'layout') {\n          // console.log('3.', part);\n          // TODO: Obviously not right, doesn't account for nested index or groups.\n          return currentRoute.children?.find(\n            (child) => child.type === 'route' && child.route === 'index'\n          );\n        }\n        return currentRoute;\n      } else {\n        return null;\n      }\n    }\n    currentRoute = currentRoute?.children?.find((child) => {\n      if (child.route === part || stripInvisibleSegmentsFromPath(child.route) === part) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  return currentRoute;\n}\n\nexport default defineRouter(\n  // getPathConfig\n  async () => {\n    const pathConfig = await getPathConfig();\n    console.log(\n      '[CLI|ROUTER]: getPathConfig',\n      require('util').inspect(pathConfig, { depth: 20, colors: true })\n    );\n    return pathConfig;\n  },\n  // getComponent (id is \"**/layout\" or \"**/page\")\n  async (id, unstable_setShouldSkip) => {\n    unstable_setShouldSkip({}); // always skip if possible\n\n    const route = wakuRouteIdToExpoRoute(routes, id);\n    // NOTE: Hack to test other stuff\n    // console.log('getComponent', id, route);\n    if (route) {\n      const { loadRoute, children, ...rest } = route;\n\n      // const { mapping, items } = result;\n      const RouteNode = lazy(async () => {\n        const value = await loadRoute();\n        return value;\n      });\n\n      return RouteNode;\n    }\n\n    // console.log('Missing router entry for:', id);\n\n    return null;\n    // if (id.includes('page')) {\n    //   return (props) => createElement(ctx('./index.tsx').default, props);\n    // } else {\n    //   return (props) => createElement(View, props);\n    // }\n\n    // if (!route) {\n    //   console.error('No route found for', id, ctx.keys());\n    //   return null;\n    // }\n\n    // // const result = await getMappingAndItems(id);\n    // // if (result === null) {\n    // //   return null;\n    // // }\n\n    // console.log('Loading route:', RouteNode);\n\n    // // const Route = ctx(id); // getRoute(items);\n    // const Component = (props: Record<string, unknown>) =>\n    //   createElement(RouteNode, {\n    //     ...props,\n    //     // ...mapping,\n    //   });\n    // // const Component = (props: Record<string, unknown>) => (\n    // //   <Route node={stripFunctions(route)}>\n    // //     {createElement(RouteNode, {\n    // //       ...props,\n    // //       // ...mapping,\n    // //     })}\n    // //   </Route>\n    // // );\n    // return Component;\n  }\n);\n\nfunction stripFunctions(routeNode: RouteNode): RouteNode {\n  return {\n    ...routeNode,\n    children: routeNode.children.map(stripFunctions),\n    loadRoute: null,\n  };\n}\n"]}